<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KappaQueue</name>
    </assembly>
    <members>
        <member name="M:KappaQueue.Controllers.AuthController.Auth(System.String,System.String)">
            <summary>
            Авторизация пользователя
            </summary>
            <param name="username">Имя пользователя</param>
            <param name="password">Пароль</param>
            <response code="200">Успешная авторизация, в теле ответа вернулся JWT-токен</response>
            <response code="401">В случае неверного логина/пароля возвращается ошибка 401</response>        
        </member>
        <member name="M:KappaQueue.Controllers.AuthController.Auth(KappaQueueCommon.Common.DTO.AuthorizationNode)">
            <summary>
            Авторизация пользователя
            </summary>
            <param name="node">Информация для авторизации</param>
            <response code="200">Успешная авторизация, в теле ответа вернулся JWT-токен</response>
            <response code="401">В случае неверного логина/пароля возвращается ошибка 401</response>
        </member>
        <member name="M:KappaQueue.Controllers.AuthController.RefreshToken">
            <summary>
            Обновление токена
            </summary>
            <response code="200">В теле ответа вернулся обновленный JWT-токен</response>
            <response code="401">В случае отсутствия аутентификации возвращается ошибка</response>
            <response code="402">В случае отсутствия пользователя или необходимого ключа в токене возвращается ошибка запроса</response>
        </member>
        <member name="M:KappaQueue.Controllers.ClientsController.GetClients(System.Nullable{System.DateTime})">
            <summary>
            Получить информацию по всем клиентам
            </summary>
            <returns>Список всех клиентов</returns>
            <param name="startTime">Дата, с которой возвращать выборку</param>
            <response code="200">Возвращен список всех клиентов в системе с учетом фильтрации</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя недостаточно прав для просмотра всех клиентов</response>
        </member>
        <member name="M:KappaQueue.Controllers.ClientsController.GetClient(System.Int32)">
            <summary>
            Получить информацию по всем пользователям
            </summary>
            <returns>Список всех пользователей</returns>
            <param name="startTime">Дата, с которой возвращать выборку</param>
            <response code="200">Возвращен список всех пользователей в системе</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя недостаточно прав для просмотра всех пользователей</response>
        </member>
        <member name="T:KappaQueue.Controllers.PositionsController">
            <summary>
            Должности
            </summary>
        </member>
        <member name="M:KappaQueue.Controllers.PositionsController.GetPositions">
            <summary>
            Получение всех должностей в системе
            </summary>
            <response code="200">В теле возвращен список должностей</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на просмотр должностей</response>
        </member>
        <member name="M:KappaQueue.Controllers.PositionsController.GetPosition(System.Int32)">
            <summary>
            Получение должности с идентификатором id
            </summary>
            <response code="200">Возвращена информация по должности</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на просмотр должностей</response>
        </member>
        <member name="M:KappaQueue.Controllers.PositionsController.AddPosition(KappaQueueCommon.Common.DTO.PositionAddDto)">
            <summary>
            Создание должности
            </summary>
            <response code="200">Возвращена информация по созданной должности</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на создание должностей</response>
        </member>
        <member name="M:KappaQueue.Controllers.PositionsController.ChangePosition(System.Int32,KappaQueueCommon.Common.DTO.PositionAddDto)">
            <summary>
            Изменение должности
            </summary>
            <response code="200">Возвращена информация по созданной должности</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на изменение должностей</response>
        </member>
        <member name="M:KappaQueue.Controllers.PositionsController.DeletePosition(System.Int32)">
            <summary>
            Удаление должности
            </summary>
            <response code="200">Должность удалена, возвращена информация по всем должностям</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на удаление должностей</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueueGroupsController.#ctor(KappaQueueCommon.Models.Context.QueueDBContext)">
            <summary>
            Конструктор контроллера
            </summary>
            <param name="context">Контекст БД</param>
        </member>
        <member name="M:KappaQueue.Controllers.QueueGroupsController.GetQueueGroups">
            <summary>
            Получение всех групп очередей
            </summary>
            <response code="200">В теле возвращен список групп очередей</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на просмотр групп очередей</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueueGroupsController.GetQueueGroup(System.Int32)">
            <summary>
            Получение группы очередей с идентификатором id
            </summary>
            <response code="200">Возвращена информация по очереди</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на просмотр очереди</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueueGroupsController.AddQueueGroup(KappaQueueCommon.Common.DTO.QueueGroupAddDto)">
            <summary>
            Создание группы очередей
            </summary>
            <response code="200">Возвращена информация по созданной группе очередей</response>
            <response code="400">Неверное наименование или префикс группы очередей</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на создание групп очередей</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueueGroupsController.ChangeQueueGroup(System.Int32,KappaQueueCommon.Common.DTO.QueueGroupAddDto)">
            <summary>
            Изменение группы очередй
            </summary>
            <response code="200">Возвращена информация по созданной группе очередей</response>
            <response code="400">Неверное наименование или префикс группы очередей, неверный id группы очередей</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на изменение группы очередей</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueueGroupsController.DeleteQueueGroup(System.Int32)">
            <summary>
            Удаление группы очередей
            </summary>
            <response code="200">Группа очередей удалена, возвращена информация по всем группам очередей</response>
            <response code="400">Невозможно удалить группу очередей с идентификатором 1</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на удаление групп очередей</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueueGroupsController.GetQueues(System.Int32)">
            <summary>
            Получение всех очередей в группе
            </summary>
            <response code="200">В теле возвращен список очередей группы</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на просмотр очередей в группе</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueueGroupsController.GetQueue(System.Int32,System.Int32)">
            <summary>
            Получение группы очередей с идентификатором id
            </summary>
            <response code="200">Возвращена информация по очереди в группе</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на просмотр очереди группы</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueueGroupsController.AddQueueToGroup(System.Int32,System.Int32)">
            <summary>
            Привязка очереди к группе очередей
            </summary>
            <response code="200">Возвращена информация по новому наполнению группы</response>
            <response code="400">Отсутствует группа или очереди с заданными идентификаторами</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на привязку очереди к группе очередей</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueueGroupsController.DeleteQueueFromGroup(System.Int32,System.Int32)">
            <summary>
            Удаление очереди из группы
            </summary>
            <response code="200">Из группы удалена очередь, возвращена информация по всем группам очередей</response>
            <response code="400">Очереди или группы с заданным идентификатором не существует, либо попытка удалить из базовой группы</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на удаление очереди из групп очередей</response>
        </member>
        <member name="T:KappaQueue.Controllers.QueuesController">
            <summary>
            Очереди
            </summary>
        </member>
        <member name="M:KappaQueue.Controllers.QueuesController.#ctor(KappaQueueCommon.Models.Context.QueueDBContext)">
            <summary>
            Конструктор контроллера
            </summary>
            <param name="context">Контекст БД</param>
        </member>
        <member name="M:KappaQueue.Controllers.QueuesController.GetQueues">
            <summary>
            Получение всех очередей
            </summary>
            <response code="200">В теле возвращен список очередей</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на просмотр очередей</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueuesController.GetQueue(System.Int32)">
            <summary>
            Получение очереди с идентификатором id
            </summary>
            <response code="200">Возвращена информация по очереди</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на просмотр очереди</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueuesController.AddQueue(KappaQueueCommon.Common.DTO.QueueAddDto)">
            <summary>
            Создание очереди
            </summary>
            <response code="200">Возвращена информация по созданной очереди</response>
            <response code="400">Неверное наименование или префикс очереди</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на создание очереди</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueuesController.ChangePosition(System.Int32,KappaQueueCommon.Common.DTO.QueueAddDto)">
            <summary>
            Изменение очереди
            </summary>
            <response code="200">Возвращена информация по измененной очереди</response>
            <response code="400">Неверное наименование или префикс очереди, неверный id очереди</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на изменение очереди</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueuesController.DeletePosition(System.Int32)">
            <summary>
            Удаление очереди
            </summary>
            <response code="200">Очередь удалена, возвращена информация по всем очередям</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на удаление очереди</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueuesController.GetQueueNodes(System.Int32)">
            <summary>
            Получение списка этапов очереди
            </summary>
            <response code="200">В теле возвращен список очередей</response>
            <response code="400">Передан неверный идентификатор очереди</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на просмотр должностей очереди</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueuesController.AddQueueNode(System.Int32,KappaQueueCommon.Common.DTO.QueueNodeAssignDto)">
            <summary>
            Добавление должности к очереди
            </summary>
            <response code="200">В теле возвращен список должностей в очереди</response>
            <response code="400">Передан неверный идентификатор очереди или должности</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на добавление должности в очередь</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueuesController.ChangeQueueNode(System.Int32,System.Int32,KappaQueueCommon.Common.DTO.QueueNodeAssignDto)">
            <summary>
            Изменение привязки должности в очереди
            </summary>
            <response code="200">Возвращена информация по должностям очереди</response>
            <response code="400">Неверное наименование или префикс очереди, неверный id очереди</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на изменение очереди</response>
        </member>
        <member name="M:KappaQueue.Controllers.QueuesController.DeletePosition(System.Int32,System.Int32)">
            <summary>
            Удаление должности из очереди
            </summary>
            <response code="200">Должность удалена, возвращена информация по всем должностям очереди</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя нет прав на удаление должности из очереди</response>
        </member>
        <member name="T:KappaQueue.Controllers.UsersController">
            <summary>
            Управление пользователями
            </summary>
            <summary>
            Управление пользователями
            </summary>
        </member>
        <member name="M:KappaQueue.Controllers.UsersController.GetUsers">
            <summary>
            Получить информацию по всем пользователям
            </summary>
            <returns>Список всех пользователей</returns>
            <response code="200">Возвращен список всех пользователей в системе</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя недостаточно прав для просмотра всех пользователей</response>
        </member>
        <member name="M:KappaQueue.Controllers.UsersController.GetUser(System.Int32)">
            <summary>
            Получить информацию о пользователе
            </summary>
            <param name="id">Идентификатор пользователя</param>
            <response code="200">Возвращен пользователь с идентификатором id</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя недостаточно прав для просмотра пользователя</response>
        </member>
        <member name="M:KappaQueue.Controllers.UsersController.AddUser(KappaQueueCommon.Common.DTO.UserAddDto)">
            <summary>
            Создать пользователя
            </summary>
            <returns>Список всех пользователей</returns>
            <response code="200">Пользователь успешно создан, в ответ возвращена информация по пользователю</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя недостаточно прав для создания других пользователей</response>
        </member>
        <member name="M:KappaQueue.Controllers.UsersController.ChangeUser(System.Int32,KappaQueueCommon.Common.DTO.UserChangeDto)">
            <summary>
            Изменить данные пользователя
            </summary>
            <returns>Список всех пользователей</returns>
            <response code="200">Пользователь успешно создан, в ответ возвращена информация по пользователю</response>
            <response code="401">Пользователь не аутентифицирован или его sid в токене не совпадает с идентификатором пользователя</response>
            <response code="403">У пользователя недостаточно прав для удаления пользователей</response>
        </member>
        <member name="M:KappaQueue.Controllers.UsersController.DeleteUser(System.Int32)">
            <summary>
            Удаление пользователя
            </summary>
            <returns>Список всех пользователей</returns>
            <response code="200">Пользователь успешно создан, в ответ возвращена информация по пользователю</response>
            <response code="400">Пользователь попытался удалить системного пользователя</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя недостаточно прав для удаления пользователей</response>
        </member>
        <member name="M:KappaQueue.Controllers.UsersController.GetUserRoles(System.Int32)">
            <summary>
            Получить информацию о ролях пользователя
            </summary>
            <response code="200">Возвращен список ролей пользователя</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя недостаточно прав для просмотра ролей пользователя</response>
        </member>
        <member name="M:KappaQueue.Controllers.UsersController.AddUserRoles(System.Int32,KappaQueueCommon.Common.DTO.UserRoleAddDto)">
            <summary>
            Добавить роли пользователю
            </summary>
            <param name="id">Идентификатор пользователя</param>
            <param name="addRoles">Список добавляемых идентификаторов ролей</param>
            <response code="200">Роли добавлены, в тело запроса возвращен актуальный список ролей пользователя</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя недостаточно прав для добавления ролей</response>
        </member>
        <member name="M:KappaQueue.Controllers.UsersController.ChangeUserRoles(System.Int32,KappaQueueCommon.Common.DTO.UserRoleAddDto)">
            <summary>
            Изменить роли пользователя - недостающие роли добавляются, лишние - удаляются
            </summary>
            <param name="id">Идентификатор пользователя</param>
            <param name="addRoles">Список добавляемых идентификаторов ролей</param>
            <response code="200">Роли изменены, в тело запроса возвращен актуальный список ролей пользователя</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя недостаточно прав для изменения ролей</response>
        </member>
        <member name="M:KappaQueue.Controllers.UsersController.ChangeUserRoles(System.Int32,System.Byte)">
            <summary>
            Удалить роль пользователя
            </summary>
            <param name="id">Идентификатор пользователя</param>
            <param name="roleId">Идентификатор удаляемой роли</param>
            <response code="200">Роль удалена, в тело запроса возвращен актуальный список ролей пользователя</response>
            <response code="401">Пользователь не аутентифицирован</response>
            <response code="403">У пользователя недостаточно прав для удаления ролей</response>
        </member>
    </members>
</doc>
